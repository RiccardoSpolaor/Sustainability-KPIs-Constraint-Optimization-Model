output ["Total KPI percentage: "++format(total_kpi_percentage)++"%\n","Co2 KPI: "++format(co2_kpi)++"\n","Recycling KPI: "++format(recycling_kpi)++"\n","Number of sold products: "++format([""++_toString_Products(p,false,false)++": "++format(n_products[p])++"" | p in Products, ])++"\n","Earnings: "++format(sum([total_earnings[k]-total_costs[k] | k in KPIs, ]))++"\n"];
function string : format(opt $T: x) = show(x);
function string : format(array [$U] of opt $T: x) = show(x);
function string : _toString_Products(opt int: x,bool: b,bool: json) = if occurs(x) then if b then showDznId(_enum_to_string_0_Products[deopt(x)]) elseif json then ("{\"e\":\""++_enum_to_string_0_Products[deopt(x)])++"\"}" else _enum_to_string_0_Products[deopt(x)] endif else if json then "null" else "<>" endif endif;
set of int: KPIs = 1..2;
set of int: Products = 1..2;
array [Products] of float: product_selling_prices = [20.0,25.0];
array [Products] of int: n_products;
float: earnings = sum([int2float(n_products[p])*product_selling_prices[p] | p in Products, ]);
array [KPIs] of float: total_earnings = [earnings,int2float(0)];
array [Products] of float: product_costs = [5.0,10.0];
float: costs = sum([int2float(n_products[p])*product_costs[p] | p in Products, ]);
array [KPIs] of float: total_costs = [costs,int2float(0)];
array [KPIs] of bool: used_kpis = [true,true];
array [KPIs] of float: relevances = [4.31,3.91];
float: recycling_kpi;
float: co2_kpi;
float: total_kpi_percentage = int2float(100)*(co2_kpi+recycling_kpi)/sum([relevances[p] | p in KPIs where used_kpis[p]==true, ]);
array [1..2] of string: _enum_to_string_0_Products = ["Box","Recicled_Box"];
